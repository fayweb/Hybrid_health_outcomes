theme_classic() +
theme(axis.text.y = element_text(angle = 45, hjust = 1)) +
labs(x = "Gene", y = "Coefficients estimate (Difference to uninfected)") +
theme(legend.title = element_blank(),
legend.position = "none") -> coef_mmr
print(coef_mmr)
ggsave(filename = paste0(an_fi, "/coef_plot_field_genes.jpeg"),
plot = coef_mmr, width = 6, height = 4, dpi = 300)
####################################################
####################################################
############################# gene expression distribution
field %>%
drop_na(species_Eimeria) %>%
pivot_longer(cols = all_of(dependent_vars),
names_to = "Genes", values_to = "Expression") %>%
ggplot(aes(x = Expression, fill = species_Eimeria)) +
ggdist::stat_halfeye(
adjust = .5,
width = .6,
alpha = 0.5,
.width = 0,
justification = -.2,
point_colour = NA,
orientation = "y"  # Set orientation to y
) +
geom_boxplot(position = "dodge2",
width = .5,
outlier.shape = NA,
orientation = "y"  # Set orientation to y
) +
facet_wrap(~Genes,  scales = 'free', ncol = 4) +
labs(x = "Expression Level", y = "Density") +
theme_minimal() +
scale_fill_manual(values = color_mapping_f, labels = labels_f)  +
theme(legend.title = element_blank(),
legend.position = c(0.85, 0.06),
legend.text = element_markdown())+
labs(y = "Density",
x = "Gene expression level") -> density_imm
density_imm
ggsave(filename = paste0(an_fi, "/density_immune_genes_field.jpeg"),
plot = density_imm, width = 10, height = 8, dpi = 300)
#######################
# combine
comb <- (density_imm | coef_mmr) +
#  plot_layout(guides = 'collect') + # Collect all legends into a single legend
plot_annotation(tag_levels = 'A') # Add fieldels (A, B, C, etc.)
# Add a figure title
comb <- comb +
plot_annotation(title = 'Fig. 7',
theme = theme(plot.title = element_text(size = 20, hjust = 0)))
comb <- comb +
plot_layout(heights = c(1, 1),
widths = c(2, 1))
# Display the panel figure
# print(comb)
# Save the panel figure
ggsave(paste0(panels_fi, "/panel_immune_gene_expression_field.jpeg"),
comb, width = 12, height = 6, dpi = 300)
# Update gene names to replace "." with "-" and "IFNg" with "IFNy"
regression_table <- tidy_models_no_intercept %>%
dplyr::select(model, term, estimate, std.error, conf.low, conf.high, p.value) %>%
mutate(
model = gsub("\\.", "-", model),  # Replace "." with "-"
model = gsub("IFNg", "IFNy", model),  # Replace "IFNg" with "IFNy"
significance = case_when(
p.value < 0.001 ~ "***",
p.value < 0.01 ~ "**",
p.value < 0.05 ~ "*",
TRUE ~ ""
)
) %>%
rename(
Gene = model,
'Treatment group' = term,
Estimate = estimate,
`Std. Error` = std.error,
`CI Lower` = conf.low,
`CI Upper` = conf.high,
`P-value` = p.value,
`Significance` = significance
)
# Create the formatted table with kableExtra
publication_table <- regression_table %>%
kbl(
caption = "Regression Results of Immune Gene Expression for E. ferrisi and E. falciformis",
format = "html",  # Or "latex" for LaTeX output
digits = 3  # Control the number of decimal places
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F) %>%
column_spec(1, bold = TRUE) %>%  # Bold gene names for emphasis
add_header_above(c(" " = 2, "Regression Estimates" = 5, " " = 1)) %>%  # Custom header, include space for "Significance"
footnote(
general = "Significance codes: '***' 0.001 '**' 0.01 '*' 0.05",
footnote_as_chunk = TRUE
)
# Print the table
print(publication_table)
#Save the table as an HTML file
save_kable(publication_table,
file = "output/tables/differences_in_treatment_groups_genes_field.html")
# Convert the saved HTML file to an image
webshot("output/tables/differences_in_treatment_groups_genes_field.html",
"output/tables/differences_in_treatment_groups_genes_field.png")
# Create the formatted table with kableExtra
publication_table <- regression_table %>%
kbl(
caption = "Regression table resutls for Eimeria spp. in field infections",
format = "html",  # Or "latex" for LaTeX output
digits = 3  # Control the number of decimal places
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F) %>%
column_spec(1, bold = TRUE) %>%  # Bold gene names for emphasis
add_header_above(c(" " = 2, "Regression Estimates" = 5, " " = 1)) %>%  # Custom header, include space for "Significance"
footnote(
general = "Significance codes: '***' 0.001 '**' 0.01 '*' 0.05",
footnote_as_chunk = TRUE
)
# Print the table
print(publication_table)
#Save the table as an HTML file
save_kable(publication_table,
file = "output/tables/differences_in_treatment_groups_genes_field.html")
# Convert the saved HTML file to an image
webshot("output/tables/differences_in_treatment_groups_genes_field.html",
"output/tables/differences_in_treatment_groups_genes_field.png")
rm(coef_mmr, comb, density_imm, results, tidy_models,
tidy_models_no_intercept, biplot, coefs5, contr_PC1, contr_PC2,
figure_panel, pc1_current_infection, pc2_current_infection,
pc1_WL_current_infection, pc2_WL_current_infection, pca_individuals, vpg,
coefs6, model_6, panel_figure5, plot1, plot2, plot3, plot4, residuals, Mouse_ID)
# Create the formatted table with kableExtra
publication_table <- regression_table %>%
kbl(
caption = "Regression table results for Eimeria spp. in field infections",
format = "html",  # Or "latex" for LaTeX output
digits = 3  # Control the number of decimal places
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F) %>%
column_spec(1, bold = TRUE) %>%  # Bold gene names for emphasis
add_header_above(c(" " = 2, "Regression Estimates" = 5, " " = 1)) %>%  # Custom header, include space for "Significance"
footnote(
general = "Significance codes: '***' 0.001 '**' 0.01 '*' 0.05",
footnote_as_chunk = TRUE
)
# Print the table
print(publication_table)
#Save the table as an HTML file
save_kable(publication_table,
file = "output/tables/differences_in_treatment_groups_genes_field.html")
# Convert the saved HTML file to an image
webshot("output/tables/differences_in_treatment_groups_genes_field.html",
"output/tables/differences_in_treatment_groups_genes_field.png")
# Create the formatted table with kableExtra
publication_table <- regression_table %>%
kbl(
caption = "Table 2: Regression results for immune gene expression in E. ferrisi and E. falciformis-infected field-caught mice",
format = "html",  # Or "latex" for LaTeX output
digits = 3  # Control the number of decimal places
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F) %>%
column_spec(1, bold = TRUE) %>%  # Bold gene names for emphasis
add_header_above(c(" " = 2, "Regression Estimates" = 5, " " = 1)) %>%  # Custom header, include space for "Significance"
footnote(
general = "Significance codes: '***' 0.001 '**' 0.01 '*' 0.05",
footnote_as_chunk = TRUE
)
source("~/GitHub/Hybrid_health_outcomes/code/analysis/analysis_multiple_multivariate_regression_field.R")
source("~/GitHub/Hybrid_health_outcomes/code/analysis/analysis_multiple_multivariate_regression.R")
source("~/GitHub/Hybrid_health_outcomes/code/analysis/analysis_multiple_multivariate_regression_field.R")
source("~/GitHub/Hybrid_health_outcomes/code/master_hm.R")
# 6.2: PCA
# Regressions with pc axes
# Plots: pc1_current_infection, pc2_current_infection, coefs5
#----------------------------------------------------------*
model_1 <- lm(WL_max ~ PC1 + PC2 +
current_infection + delta_ct_cewe_MminusE +
mouse_strain + immunization +
weight_dpi0, data = lab )
summary(model_1)
tab_model(model_1)
stargazer(model_1,
type = "text", out = paste0(tables,
"/predictors_weightloss.doc"),
title = "Linear models - Predicting maximum weight loss")
# Extract the residuals from the model
residuals <- resid(model_1)
# Create a data frame with the residuals
residuals_df <- data.frame(residuals = residuals)
# Create the QQ plot
residuals_1 <-
ggplot(residuals_df, aes(sample = residuals)) +
stat_qq(color = "blue") +
ggtitle("QQ Plot of Residuals") +
xlab("Theoretical Quantiles") +
ylab("Sample Quantiles") +
theme_minimal()
residuals_1
ggsave(filename = paste0(an_fi, "/residuals_model_1.jpeg"),
plot = residuals_1,
width = 12, height = 6, dpi = 600)
# Extract the fitted values from the model
fitted_values <- fitted(model_1)
# Create a data frame with the residuals and the fitted valueshttp://127.0.0.1:11745/graphics/plot_zoom_png?width=674&height=334
data_df <- data.frame(residuals = residuals, fitted_values = fitted_values)
# Create the scatter plot
residuals_vs_fitted <-
ggplot(data_df, aes(x = fitted_values, y = residuals)) +
geom_point(color = "blue") +
ggtitle("Residuals vs Fitted Values") +
xlab("Fitted Values") +
ylab("Residuals") +
theme_minimal()
residuals_vs_fitted
ggsave(filename = paste0(an_fi, "/residuals_vs_fitted.jpeg"),
plot = residuals_vs_fitted,
width = 12, height = 6, dpi = 600)
# without host data
model_2 <- lm(WL_max ~ PC1 + PC2 + current_infection + delta_ct_cewe_MminusE, data = lab)
summary(model_2)
# only pc1 + pc2
model_3 <- lm(WL_max ~ PC1 + PC2 , data = lab)
summary(model_3)
model_4 <- lm(WL_max ~ PC1 + PC2 + current_infection + delta_ct_cewe_MminusE +
weight_dpi0, data = lab)
summary(model_4)
plot_coefs(model_1, model_2, model_3)
# remove gene information
model_5 <- lm(WL_max ~  current_infection + delta_ct_cewe_MminusE +
mouse_strain + immunization +
weight_dpi0, data = lab )
summary(model_5)
plot_coefs(model_1, model_2, model_3) -> coef_plot_pca
coef_plot_pca
## Please cite as:
##  Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
stargazer(model_1, model_5, model_3,
type = "text",
out = paste0(tables, "/stargazer.docx"),
title = "Linear models - Predicting maximum weight loss",
align = TRUE)
export_summs(model_1, model_5, model_3,
scale = TRUE, to.file = "docx",
file.name = paste0(tables, "/lab_model1_3.docx"))
models <- list(
"Model 1" = model_1,
#"Model 2" = model_2,
"Model 2" = model_5,
"Model 3" = model_3)
summ(model_1)
modelsummary(models = models) -> s_models
str(s_models)
modelsummary(models, stars = TRUE, #gof_omit = "IC|Adj|F|RMSE|Log",
output = paste0(tables, "/lab_model1_3.docx"))
modelsummary(models = as.list(model_1, model_5, model_3),
output = paste0(tables, "/lab_model1.docx"))
summ(model_1)
plot_summs(model_1, model_5, model_3,
colors = "CUD", rescale.distributions = TRUE,
plot.distributions = FALSE, point.size = 3,
robust = TRUE,
model.names = c("Complex model", "Without PC1 and PC2",
"Solely PC1 and PC2")) -> coefs1_3
coefs1_3
ggsave(filename = paste0(an_fi, "/plot_sums_complex_pca.jpeg"),
plot = coefs1_3, width = 6, height = 4)
####################################
# Tidy the models
tidy_model_1 <- tidy(model_1)
tidy_model_5 <- tidy(model_5)
tidy_model_3 <- tidy(model_3)
# Combine the tidied models with model labels
all_models <- bind_rows(
tidy_model_1 %>% mutate(model = "Model 1"),
tidy_model_5 %>% mutate(model = "Model 2"),
tidy_model_3 %>% mutate(model = "Model 3")
)
coefs1_3
biplot
dev.off()
dev.off()
biplot
# Group mouse_strain terms into a single summary row per model
mouse_strain_summary <- all_models %>%
filter(grepl("mouse_strain", term)) %>%
group_by(model) %>%
summarise(
term = "Mouse Strain (combined)",
estimate = paste0(round(estimate, 3), collapse = ", "),
std.error = paste0("(", round(std.error, 3), ")", collapse = ", "),
p.value = paste0(round(p.value, 3), collapse = ", ")
) %>%
mutate(across(c(estimate, std.error, p.value), as.character))  # Ensure consistency in data type
# Filter out the mouse_strain terms from the non-strain rows
non_mouse_strain_terms <- all_models %>%
filter(!grepl("mouse_strain", term)) %>%
mutate(across(c(estimate, std.error, p.value), as.character))  # Convert to character to match
# Combine non-mouse_strain terms with mouse_strain_summary
final_table <- bind_rows(non_mouse_strain_terms, mouse_strain_summary)
# Arrange rows by model and move Mouse Strain row down
final_table <- final_table %>%
arrange(model, desc(term != "Mouse Strain (combined)"))
# Create a final clean table
publication_table <- final_table %>%
dplyr::select(model, term, estimate, std.error, p.value) %>%  # Select relevant columns
kbl(format = "html", digits = 3, caption = "Compact Regression Table with Mouse Strain Combined") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
add_header_above(c(" " = 2, "Model 1" = 1, "Model 2" = 1, "Model 3" = 1))  # Adjusted for 5 total columns
# Save as HTML
save_kable(publication_table, file = "output/tables/compact_regression_table_combined.html")
# Convert to PNG for Google Docs
webshot("output/tables/compact_regression_table_combined.html",
file = "output/tables/compact_regression_table_combined.png")
model_6 <- lm(WL_max ~ PC1 * current_infection + PC2 *current_infection,
data = lab)
summary(model_6)
## Please cite as:
##  Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
stargazer(model_6,
type = "text",
out = paste0(tables, "/PCinteractionsParasite.txt"),
title = "Linear models - Predicting maximum weight loss",
align = TRUE)
export_summs(model_6,
scale = TRUE, to.file = "docx",
file.name = paste0(tables, "/PCinteractionsParasite.docx"))
plot_summs(model_6) -> coefs6
coefs6
ggsave(filename = paste0(an_fi, "/plot_sums_mix_PCA.jpeg"),
plot = coefs6, width = 6, height = 4)
#see the ggefects
effects <- ggpredict(model_6)
pc1_current_infection <-
ggpredict(model_6, terms = c("PC1")) %>%
plot(colors = "darkorchid") +   # Use a refined shade of blue
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +
labs(title = NULL) +  # This removes the title
#  ggtitle("Effect of PC1 on Predicted Weight Loss") +
xlab("Principal Component 1 (PC1)") +
ylab("Predicted values of weight loss") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
pc1_current_infection
ggsave(filename = paste0(an_fi, "/pc1_current_infection.jpeg"),
plot = pc1_current_infection,
width = 6, height = 4, dpi = 1000)
pc2_current_infection <-
ggpredict(model_6, terms = c("PC2")) %>%
plot(colors = "darkorchid") +   # Use a refined shade of blue
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +
labs(title = NULL) +  # This removes the title
# ggtitle("Effect of PC2 on Predicted Weight Loss") +
xlab("Principal Component 2 (PC2)") +
ylab("Predicted values of weight loss") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12)
)
pc2_current_infection
ggsave(filename = paste0(an_fi, "/pc2_current_infection.jpeg"),
plot = pc2_current_infection,
width = 6, height = 4, dpi = 1000)
plot_summs(model_6) -> coef_interaction
modelsummary(model_6, stars = TRUE, gof_omit = "IC|Adj|F|RMSE|Log",
output = paste0(tables, "/mixed_effects_pca.docx"))
# Now create the scatter plot using this color mapping
ggpredict(model_6, terms = c("PC1", "current_infection")) %>%
plot() +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +
labs(title = NULL) +  # This removes the title
# ggtitle("Effect of PC2 on Predicted Weight Loss") +
xlab("Principal Component 1 (PC1)") +
ylab("Predicted values of weight loss") +
theme_minimal() +
labs(color = "Infection group") +
scale_color_manual(values = color_mapping, labels = labels) +
scale_fill_manual(values = color_mapping, labels = labels) +
theme(
plot.title = element_text(size = 16, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_markdown()) -> pc1_WL_current_infection
pc1_WL_current_infection
ggsave(paste0(an_fi, "/pc1_WL_current_infection.jpeg"), pc1_WL_current_infection,
width = 8, height = 6, dpi = 1000)
# Now create the scatter plot using this color mapping
# Now create the scatter plot using this color mapping
ggpredict(model_6, terms = c("PC2", "current_infection")) %>%
plot() +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +
labs(title = NULL) +  # This removes the title
# ggtitle("Effect of PC2 on Predicted Weight Loss") +
xlab("Principal Component 2 (PC2)") +
ylab("Predicted values of weight loss") +
theme_minimal() +
scale_color_manual(values = color_mapping, labels = labels) +
scale_fill_manual(values = color_mapping, labels = labels) +
labs(color = "Infection group") +
theme(
plot.title = element_text(size = 16, hjust = 0.5),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_markdown()) -> pc2_WL_current_infection
pc2_WL_current_infection
ggsave(paste0(tables, "/pc2_WL_current_infection.jpeg"),
pc2_WL_current_infection, width = 8, height = 6, dpi = 1000)
####################
################### Create the panel figure
figure_panel <- ggarrange(pca_variables, biplot,
pc1_current_infection, pc2_current_infection,
pc1_WL_current_infection, pc2_WL_current_infection,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 2, nrow = 3)
# Adding the title "Figure 1" to the entire arrangement
figure_panel <- annotate_figure(figure_panel,
top = text_grob("Fig. 2", size = 14,
face = "bold"))
ggsave(paste0(panels_fi, "/panel_regression_pca.jpeg"),
figure_panel, width = 12, height = 10, dpi = 300)
################### Create the simplified figure# combine
panel_figure5 <-
#(pc1_current_infection | pc2_current_infection ) /
(pc1_WL_current_infection | pc2_WL_current_infection) /
free(coefs6) +
plot_layout(guides = 'collect') + # Collect all legends into a single legend
plot_annotation(tag_levels = 'A') # Add labels (A, B, C, etc.)
# Add a figure title
panel_figure5 <- panel_figure5 +
plot_annotation(title = 'Fig. 4',
theme = theme(plot.title = element_text(size = 20, hjust = 0)))# +
###########################biplot and linear models
panel_biplot_regr <- ggarrange(biplot, coefs1_3,
labels = c("A", "B"),
ncol = 2)
###########################biplot and linear models
panel_biplot_regr <- ggarrange(biplot, coefs1_3,
labels = c("A", "B"),
ncol = 2,
top = text_grob("Fig. 3", size = 14,
face = "bold"))
ggsave(paste0(panels_fi, "/panel_regression_biplot.jpeg"),
figure_panel, width = 12, height = 10, dpi = 300)
####################
################### Create the panel figure
figure_panel <- ggarrange(pca_variables, biplot,
pc1_current_infection, pc2_current_infection,
pc1_WL_current_infection, pc2_WL_current_infection,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 2, nrow = 3)
# Adding the title "Figure 1" to the entire arrangement
figure_panel <- annotate_figure(figure_panel,
top = text_grob("Fig. 2", size = 14,
face = "bold"))
ggsave(paste0(panels_fi, "/panel_regression_pca.jpeg"),
figure_panel, width = 12, height = 10, dpi = 300)
###########################biplot and linear models
panel_biplot_regr <- ggarrange(biplot, coefs1_3,
labels = c("A", "B"),
ncol = 2,
top = text_grob("Fig. 3", size = 14,
face = "bold"))
ggsave(paste0(panels_fi, "/panel_regression_biplot.jpeg"),
panel_biplot_regr, width = 12, height = 10, dpi = 300)
source("~/GitHub/Hybrid_health_outcomes/code/analysis/analysis_linear_regressions_PCA.R")
ggsave(paste0(panels_fi, "/panel_regression_biplot.jpeg"),
panel_biplot_regr, width = 12, height = 10, dpi = 300)
panel_biplot_regr <- annotate_figure(panel_biplot_regr,
top = text_grob("Fig. 3", size = 14,
face = "bold"))
###########################biplot and linear models
panel_biplot_regr <- ggarrange(biplot, coefs1_3,
labels = c("A", "B"),
ncol = 2)
panel_biplot_regr <- annotate_figure(panel_biplot_regr,
top = text_grob("Fig. 3", size = 14,
face = "bold"))
ggsave(paste0(panels_fi, "/panel_regression_biplot.jpeg"),
panel_biplot_regr, width = 12, height = 10, dpi = 300)
ggsave(paste0(panels_fi, "/panel_regression_biplot.jpeg"),
panel_biplot_regr, width = 20, height = 10, dpi = 300)
ggsave(paste0(panels_fi, "/panel_regression_biplot.jpeg"),
panel_biplot_regr, width = 23, height = 10, dpi = 300)
ggsave(paste0(panels_fi, "/panel_regression_biplot.jpeg"),
panel_biplot_regr, width = 21, height = 10, dpi = 300)
