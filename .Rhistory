theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 14),
axis.text = element_text(size = 12),
axis.title = element_text(size = 13),
axis.text.x = element_markdown(),
legend.text = element_markdown()
)
ggsave(filename = paste0(an_fi, "/deltact_random.jpeg"),
width = 6, height = 5, dpi = 300)
summary(model_d)
### plotting
test_lab %>%
ggplot(aes(x = predictions, y = WL_max, color = current_infection)) +
geom_point(aes(size = 5),#delta_ct_cewe_MminusE),
alpha = 0.7) +
labs(
x = "Predictions: Maximum weight loss",
y = "Observed: Maximum weight loss",
#  title = "Relationship between Predicted and Observed Weight Loss",
#subtitle = "Grouped by Current Infection and Sized by Delta CT Value",
color = "Parasite strain",
# size = "Caecal infection intensities, Delta Ct value",
#shape = "Delta Ct treshold"
) +
theme_minimal() +
theme(
legend.position = "right",
legend.title = element_text(face = "bold"),
axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_blank()
) +
scale_color_manual(values = color_mapping, labels = labels) +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme(legend.position = c(0.8, 0.2),
legend.text = element_markdown())-> predictions_random_for_lab
predictions_random_for_lab
ggsave(plot = predictions_random_for_lab,
filename = paste0(an_fi, "/predictions_random_for_lab.jpeg"),
width = 6, height = 5,
dpi = 1000)
combi_plot <- (importance_plot | predictions_random_for_lab) /
(lm_weight_loss_predictions_c | lm_short) +
#plot_layout(guides = 'collect') + # Collect all legends into a
#single legend
plot_annotation(tag_levels = 'A') # Add labels (A, B, C, etc.)
combi_plot
# Add a figure title
combi_plot <- combi_plot +
plot_annotation(title = 'Fig. 5',
theme = theme(plot.title = element_text(size = 13,
hjust = 0)))
# Display the panel figure
print(combi_plot)
ggsave(plot = combi_plot,
filename = paste0(panels_fi, "/variableimp_rand_results_lab.jpeg"),
width = 12,
height = 8, dpi = 1000)
# Calculate the linear model
lm_fit <- lm(WL_max ~ predictions, data = test_lab)
# Display the panel figure
print(combi_plot)
ggsave(plot = combi_plot,
filename = paste0(panels_fi, "/variableimp_rand_results_lab.jpeg"),
width = 12,
height = 8, dpi = 1000)
# Calculate the linear model
lm_fit <- lm(WL_max ~ predictions, data = test_lab)
# Extract coefficients for the model formula
intercept <- round(coef(lm_fit)[1], 2)
slope <- round(coef(lm_fit)[2], 2)
formula_text <- paste0("WL_max = ", intercept, " ",
ifelse(slope >= 0, "+ ", "- "),
abs(slope), " * predictions")
# Calculate correlation
cor_value <- round(cor(test_lab$WL_max, test_lab$predictions), 2)
cor_text <- paste0("Rho = ", cor_value)
test_lab   %>%
ggplot(aes(x = predictions, y = WL_max)) +
geom_smooth(method = lm, se = TRUE) +
labs(x = "Predictions: Maximum weight loss",
y = "Observed: Maximum weight loss") +
geom_point(aes(x = predictions, y = WL_max, size = 0.8, alpha = 0.3)) +
labs(x = "Predictions: Maximum weight loss",
y = "Observed: Maximum weight loss") +
theme_light() +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
legend.position = "none") +
annotate("text",
x = min(test_lab$predictions), y = max(test_lab$WL_max),
label = formula_text, hjust = 0,
vjust = 4,
size = 4, color = "blue") +
annotate("text", x = min(test_lab$predictions),
y = max(test_lab$WL_max),
label = cor_text, hjust = 0, vjust = 1.5,
size = 4, color = "blue") -> linear_plot
linear_plot
ggsave(filename = paste0(an_fi, "/linear_model_of_random_forest.jpeg"), plot = linear_plot,
width = 10, height = 6,
dpi = 1000)
figure_panel_2 <- ggarrange(predictions_random_for_lab,
ggarrange(importance_plot, lm_short,
labels = c("B", "C"), ncol = 2),
nrow = 2, labels = "A")
# Adding the title "Figure 1" to the entire arrangement
figure_panel_2 <- annotate_figure(figure_panel_2,
top = text_grob("Figure 2", size = 14,
face = "bold"))
print(figure_panel_2)
ggsave(paste0(panels_fi, "/panel_random_forest_lab_alternative.jpeg"),
figure_panel_2,
width = 18, height = 18, dpi = 300)
########################################################################
## Decision to re-train the random forest to the complete data set before
# application to wild samples
set.seed(232)
#train the model
WL_predict_gene <- randomForest(WL_max ~., data = gene_W,
proximity = TRUE, ntree = 308)
# ntree = number of trees
# save the model
saveRDS(WL_predict_gene, file =  paste0(cmodels, "WL_predict_gene.RDS"))
print(WL_predict_gene)
predict_WL_cv <- rf.crossValidation(x = WL_predict_gene, xdata = gene_W,
p = 0.10, n = 99, ntree = 308)
predict_WL_cv$fit.var.exp
predict_WL_cv$fit.mse
par(mar=c(1,1,1,1))
root_mean <- plot(predict_WL_cv)
# Root Mean Squared Error (observed vs. predicted) from each Bootstrap
# iteration (cross-validation)
mean_error <- plot(predict_WL_cv, stat = "mse")
#Percent variance explained from specified fit model
model_var <- plot(predict_WL_cv, stat = "var.exp")
#Mean Absolute Error from each Bootstrapped model
abs_error <- plot(predict_WL_cv, stat = "mae")
#d# ---------------------------------------------------------------------------------------------------
error_random  <- plot(WL_predict_gene)
## ---------------------------------------------------------------------------------------------------
# number of trees with lowest MSE
which.min(WL_predict_gene$mse)
# RMSE of this optimal random forest
sqrt(WL_predict_gene$mse[which.min(WL_predict_gene$mse)])
WL_predict_gene$mtry
oob_error_rate <- WL_predict_gene$mse[WL_predict_gene$ntree]
oob_error_rate <- 1 - sum(diag(WL_predict_gene$confusion)) / sum(WL_predict_gene$confusion)
# filter for the field mice
Field <- hm %>%
filter(origin == "Field") %>%
drop_na(HI) # remove any nas in the hybrid index
# select the gene columns
gene <-  Field %>%
ungroup() %>%
dplyr::select(c(Mouse_ID, all_of(Genes_v)))
# data frame with only the genes
genes <- gene %>%
dplyr::select(-Mouse_ID)
# load predicting weight loss model
weight_loss_predict <- readRDS("code/models/WL_predict_gene.rds")
set.seed(540)
#The predict() function in R is used to predict the values
#based on the input data.
predicted_WL <- predict(weight_loss_predict, genes)
# assign test.data to a new object, so that we can make changes
result_field <- genes
#add the new variable of predictions to the result object
result_field <- cbind(result_field, as.data.frame(predicted_WL))
# add it to the field data
Field <- cbind(Field,  as.data.frame(predicted_WL))
rm(gene,genes, result_field, weight_loss_predict)
########## Analyzing the distribution of our data in order to
# go on with the anaylsis
Field %>% ggplot(aes(x = predicted_WL)) +
geom_histogram(binwidth = 1.5)
##  predicted WL vs HI
Field %>%
ggplot(aes(x = HI , y = predicted_WL , color = Sex)) +
geom_smooth() +
geom_point()
## body length vs predicted WL
Field %>%
ggplot(aes(x = Body_Length , y = predicted_WL , color = Sex)) +
geom_smooth() +
geom_point()
## Let'S further analyse the distribution of WL
x <- Field$predicted_WL
descdist(data = x, discrete = FALSE)
descdist(data = x, discrete = FALSE, #data is continuous
boot = 1000)
##
normal_ <- fitdist(x, "norm")
weibull_ <- fitdist(x, "weibull")
gamma_ <- fitdist(x, "gamma")
## Now fit the distributions to the predicted weight loss data
tryDistrib(x, "normal") # -778.5967
tryDistrib(x, "binomial") # failed
tryDistrib(x, "student") # failed
tryDistrib(x, "weibull") # -784.4636
tryDistrib(x, "weibullshifted") # failed
## Compare again between normal and weibull
findGoodDist(x, "normal", "weibull") # normal here again
## plot the distributions
plot(normal_)
summary(normal_)
plot(gamma_)
summary(gamma_)
plot(weibull_)
summary(weibull_)
rm(normal_, weibull_, gamma_, )
# 7.6: Could we derive tolerance out of the predicted health impact and
# infection intenstities for each mouse?
# If so, can we test the hybridicity on this derives tolerance variable?
tolerance <- lm(predicted_WL ~  delta_ct_cewe_MminusE, Field %>%
filter(infection_status == "TRUE"))
summary(tolerance)
estimates <- ggpredict(tolerance)
plot(estimates)
# make infection status a factor
#Field$MC.Eimeria <- factor(Field$MC.Eimeria, levels = c("FALSE", "TRUE"))
#############################################
############################################
############################################
## How does the predicted weight loss differ betwen infected species
species <- lm(predicted_WL ~ species_Eimeria, data = Field)
summary(species)
modelsummary(species)
# Create predicted values using ggpredict
preds <- ggpredict(species, terms = "species_Eimeria")
# Plot the predicted values
ggplot(preds, aes(x = x, y = predicted, color = x)) +
geom_point(#aes(shape = x),
size = 3) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.1, size = 0.7) +
geom_line(aes(group = group, color = "black")) +
scale_color_manual(values = color_mapping_f, labels = labels_f) +
labs(
# title = "Predicted weight loss in wild mice,
#categorized by the species of Eimeria",
x = "Eimeria spp. subspecies",
y = "Predicted Weight Loss",
color = "Species",
shape = "Species"
) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 14),
axis.text = element_text(size = 12),
axis.title = element_text(size = 13),
axis.text.x = element_markdown(),
legend.text = element_markdown()
) -> predictions
predictions
# Save the plot to a file
ggsave(paste0(an_fi, "/predicted_weight_loss_species.jpeg"),
#width = 8, height = 6,
dpi = 1000)
Field_par <- Field %>%
mutate(
infected_Aspiculuris = Aspiculuris_sp != 0,
infected_syphasia = Syphacia_sp != 0,
infected_crypto = ILWE_Crypto_Ct != 0
)
Field_par <- Field_par %>%
mutate(
infected_Aspiculuris = as.factor(infected_Aspiculuris),
infected_syphasia = as.factor(infected_syphasia),
infected_crypto = as.factor(infected_crypto)
)
modelA <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris
+ infected_syphasia + infected_crypto, data = Field_par)
summary(modelA)
modelsummary(modelA)
plot_summs(modelA, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "skyblue") -> coef_A
coef_A
ggsave(filename = paste0(an_fi, "/coefficient_plot_parasites.jpeg"),
width = 8, height = 6, dpi = 300)
###### Plotting the raincloud plot to show the effect of Eimeria spp.
# on predicted weight loss
# Define colors
colors <- c("TRUE" = "red", "FALSE" = "steelblue")
Field %>%
drop_na(MC.Eimeria)%>%
ggplot(aes(y = MC.Eimeria, x = predicted_WL, fill = MC.Eimeria)) +
ggdist::stat_halfeye(
adjust = .5,
width = .6,
alpha = 0.5,
.width = 0,
justification = -.2,
point_colour = NA,
orientation = "y"  # Set orientation to y
) +
scale_fill_manual(values = colors) +
geom_boxplot(
width = .15,
outlier.shape = NA,
orientation = "y"  # Set orientation to y
) +
stat_dots(
# ploting on left side
side = "left",
# adjusting position
justification = 1.1,
# adjust grouping (binning) of observations
binwidth = 0.25,
alpha = 0.5) +
geom_point(
shape = 95,
size = 15,
alpha = .2,
color = "gray50",
position = position_dodge(width = 0.75)
) +
coord_cartesian(ylim = c(1.2, 2.9), clip = "off") +
theme_minimal() +
labs(
#title = "Mice infected with Eimeria spp. experience
#significantly greater predicted weight loss",
y = "Infection status with Eimerai spp.",
x = "Predicted weight loss" ,
fill = "Infection status with Eimeria spp.") +
theme(legend.position = "blank") -> raincloud_plots__eimeria
raincloud_plots__eimeria
ggsave(plot = raincloud_plots__eimeria, filename =
paste0(an_fi, "/raincloud_eimeria.jpeg"),
width = 6,
height = 4,
dpi = 1000)
raincloud_plots__eimeria
## Let'S dive into it further
# what about a combination of the oocyst and infection intensity data with qpcr?
model <- lm(predicted_WL ~  infection_status * delta_ct_cewe_MminusE, data = Field)
summary(model)
confint(model)
modelsummary(model)
# Plot the summary with enhanced aesthetics
plot_summs(model,
scale = TRUE,
robust = TRUE,
inner_ci_level = 0.95,
outer_ci_level = 0.99,
coefs = c("Infected with Eimeria spp." = "infection_statusTRUE",
"Infection intensity with Eimeria spp." =
"infection_statusTRUE:delta_ct_cewe_MminusE")) +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text.x = element_text(size = 12, color = "black"),
axis.text.y = element_text(size = 12, color = "black"),
axis.title.x = element_text(size = 14, color = "black"),
axis.title.y = element_text(size = 14, color = "black"),
plot.title = element_text(size = 16, hjust = 0.5, face = "bold")
) +
labs(
x = "Estimate",
y = "Predictor"
) +
scale_color_manual(values = c("blue", "red")) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey") -> int_MC
int_MC
ggsave(paste0(an_fi, "/intensity_melting_curve.jpeg"), int_MC)
############################################
## How does the predicted weight loss differ betwen infected species
species <- lm(predicted_WL ~ species_Eimeria, data = Field)
summary(species)
modelsummary(species)
# Create predicted values using ggpredict
preds <- ggpredict(species, terms = "species_Eimeria")
# Plot the predicted values
ggplot(preds, aes(x = x, y = predicted, color = x)) +
geom_point(#aes(shape = x),
size = 3) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.1, size = 0.7) +
geom_line(aes(group = group, color = "black")) +
scale_color_manual(values = color_mapping_f, labels = labels_f) +
labs(
x = "Eimeria spp. subspecies",
y = "Predicted Weight Loss",
color = "Species",
shape = "Species"
) +
theme_minimal() +
theme(
legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 14),
axis.text = element_text(size = 12),
axis.title = element_text(size = 13),
axis.text.x = element_markdown(),
legend.text = element_markdown()
) -> predictions
predictions
# Save the plot to a file
ggsave(paste0(an_fi, "/predicted_weight_loss_species.jpeg"),
width = 8, height = 6, dpi = 300)
#### Are there any differences in prediced weight loss when we control
# for other intestinal parasites?
# Eventhough our model is trained and tested on eimeria infections
Field <- Field %>%
mutate(infection_intensity_Eim = delta_ct_cewe_MminusE)
Field_par <- Field %>%
mutate(
infected_Aspiculuris = Aspiculuris_sp != 0,
infected_syphasia = Syphacia_sp != 0,
infected_crypto = ILWE_Crypto_Ct != 0
)
Field_par <- Field_par %>%
mutate(
infected_Aspiculuris = as.factor(infected_Aspiculuris),
infected_syphasia = as.factor(infected_syphasia),
infected_crypto = as.factor(infected_crypto)
)
modelA <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris
+ infected_syphasia + infected_crypto, data = Field_par)
summary(modelA)
modelsummary(modelA)
plot_summs(modelA, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "skyblue") -> coef_A
coef_A
ggsave(filename = paste0(an_fi, "/coefficient_plot_parasites.jpeg"),
width = 8, height = 6, dpi = 300)
##############remove eimeria
modelB <- lm(predicted_WL ~  infection_status + infected_Aspiculuris
+ infected_syphasia + infected_crypto, data = Field_par)
summary(modelB)
modelsummary(modelB)
plot_summs(modelB, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "skyblue") -> coef_B
coef_B
ggsave(filename = paste0(an_fi, "/coefficient_plot_parasites.jpeg"),
width = 8, height = 6, dpi = 300)
###### Plotting the raincloud plot to show the effect of Eimeria spp.
# on predicted weight loss
# Define colors
colors <- c("TRUE" = "red", "FALSE" = "steelblue")
gsub(pattern = "TRUE", replacement = "Infected with Eimeria spp.",
x = Field$MC.Eimeria) -> Field$MC.Eimeria
gsub(pattern = "FALSE", replacement = "Uninfected with Eimeria sp.",
x = Field$MC.Eimeria) -> Field$MC.Eimeria
Field %>%
drop_na(MC.Eimeria) %>%
ggplot(aes(y = MC.Eimeria, x = predicted_WL, fill = MC.Eimeria)) +
ggdist::stat_halfeye(
adjust = .5,
width = .6,
alpha = 0.5,
.width = 0,
justification = -.2,
point_colour = NA,
orientation = "y"  # Set orientation to y
) +
scale_fill_manual(values = colors) +
geom_boxplot(
width = .15,
outlier.shape = NA,
orientation = "y"  # Set orientation to y
) +
stat_dots(
# ploting on left side
side = "left",
# adjusting position
justification = 1.1,
# adjust grouping (binning) of observations
binwidth = 0.25,
alpha = 0.5) +
geom_point(
shape = 95,
size = 15,
alpha = .2,
color = "gray50",
position = position_dodge(width = 0.75)
) +
coord_cartesian(ylim = c(1.2, 2.9), clip = "off") +
theme_minimal() +
labs(y = "Infection status with Eimeria spp.",
x = "Predicted weight loss" ,
fill = "Infection status with Eimeria spp.") +
theme(legend.position = "blank") -> raincloud_plots__eimeria
raincloud_plots__eimeria
ggsave(plot = raincloud_plots__eimeria, filename =
paste0(an_fi, "/raincloud_eimeria.jpeg"),
width = 6,
height = 4, dpi = 1000)
#### just eimeria
modelc <- lm(predicted_WL ~ species_Eimeria * FEC_Eim_Ct, Field )
summary(modelc)
#----------------------------------------------------------*
# Panel 3: Random Forest predicting weight loss
# Requires: hm, field
#----------------------------------------------------------*
if (0) source(file = "code/figure_creation/Panel_3.R")
importance_plot
predictions_random_for_lab
predictions
raincloud_plots__eimeria
int_MC
raincloud_plots__eimeria
int_MC
panel <-
(predictions_random_for_lab | importance_plot) /
(coef_A | int_MC) /
(Cor_infection_wl | Cor_OPG_wl ) +
plot_annotation(tag_levels = 'A')
