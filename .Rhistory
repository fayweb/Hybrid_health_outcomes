theme(legend.position = "none",
axis.text.x = element_text(angle = 70, vjust = 0.5, hjust=0.3)) +
xlab("Maximum relative weight loss") +
ylab("Mouse Strain") +
facet_grid(~infection) -> strains_weight_challenge
strains_weight_challenge
ggsave(filename = paste0(d_fi,"/strains_weight_chalenge.jpeg"),
plot = strains_weight_challenge,
width = 10, height = 6, dpi = 1000)
###################### eimeria strains
ggplot(lab, aes(x = WL_max, y = Parasite_challenge, fill = Parasite_challenge)) +
geom_density_ridges(jittered_points = TRUE, position = position_points_jitter(height = 0),
scale = 0.9, alpha = 0.6, point_shape = 21, point_size = 2, point_alpha = 1) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.5,
position = position_nudge(x = 0.2)) +
theme_minimal() +
scale_fill_manual(values = color_mapping) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.3)) +  # Apply markdown to legend text
xlab("Maximum relative weight loss") +
ylab("Parasite strain - challenge infections") -> eimeria_weight_chal
eimeria_weight_chal
# make the legend in italics
# checkout the function in the functions.R script
italics_y(eimeria_weight_chal, labels) -> eimeria_weight_chal
eimeria_weight_chal
ggsave(filename = paste0(d_fi,"/eimeria_strains_weight_c.jpeg"),
plot = eimeria_weight_chal,
width = 8, height = 6, dpi = 1000)
ggplot(lab %>%
filter(infection == "primary", Mouse_ID %in% lab$Mouse_ID) %>%
#filter(infection == "primary", Mouse_ID %in% lab$Mouse_ID) %>%
group_by(Mouse_ID),
aes(x = WL_max, y = Parasite_primary, fill = Parasite_primary)) +
geom_density_ridges(jittered_points = TRUE,
position = position_points_jitter(height = 0),
scale = 0.9, alpha = 0.6, point_shape = 21,
point_size = 2, point_alpha = 1) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.5,
position = position_nudge(x = 0.2)) +
# coord_flip() +
theme_minimal() +
scale_fill_manual(values = color_mapping) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.3)) +
xlab("Maximum relative weight loss") +
ylab("Parasite strain - primary infections") -> eimeria_weight_prim
eimeria_weight_prim
labels_2 <- c("*E. ferrisi*",  "*E. falciformis*")
italics_y(eimeria_weight_prim, labels_2) -> eimeria_weight_prim
eimeria_weight_prim
ggsave(filename = paste0(d_fi,"/eimeria_strains_weight_p.jpeg"),
plot = eimeria_weight_prim,
width = 8, height = 6, dpi = 1000)
## primary vs challenge infection
ggplot(lab,
aes(x = WL_max, y = current_infection, fill = current_infection)) +
geom_density_ridges(jittered_points = TRUE,
position = position_points_jitter(height = 0),
scale = 0.9, alpha = 0.6, point_shape = 21,
point_size = 2, point_alpha = 1) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.5,
position = position_nudge(x = 0.2)) +
# coord_flip() +
theme_minimal() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.3)) +
xlab("Maximum relative weight loss") +
ylab("Parasite strain") +
facet_wrap(~ infection) -> eimeria_weight_challenge
italics_y(eimeria_weight_challenge, labels) -> eimeria_weight_challenge
ggsave(filename = paste0(d_fi,"/eimeria_strains_weight_challenge.jpeg"),
plot = eimeria_weight_challenge,
width = 8, height = 10, dpi = 1000)
#########################################
# Let's add both challenge and primary together
lab  %>%
ggplot(aes(x = WL_max, y = current_infection, fill = current_infection)) +
geom_density_ridges(jittered_points = TRUE,
position = position_points_jitter(height = 0),
scale = 0.9, alpha = 0.6, point_shape = 21,
point_size = 2, point_alpha = 1) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.5,
position = position_nudge(x = 0.2)) +
theme_minimal() +
scale_fill_manual(values = color_mapping) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.3)) +
xlab("Maximum relative weight loss") +
ylab("Parasite strain")  -> eimeria_weight
eimeria_weight
italics_y(eimeria_weight, labels)
ggsave(filename = paste0(d_fi,"/eimeria_weight_combined.jpeg"),
plot = eimeria_weight,
width = 8, height = 6, dpi = 1000)
###### is the difference between parasite strains significant?
parasite_WL <- lm(formula = WL_max ~ current_infection, data = lab)
summary(parasite_WL)
##### is the differnece between mouse strains significant?`
mouse_WL <- lm(WL_max ~ mouse_strain, data = lab)
summary(mouse_WL)
###################################################
#relative weight loss per day - challenge
Challenge %>%
filter(infection == "challenge", Mouse_ID %in% lab$Mouse_ID) %>%
ggplot(aes(x = dpi, y = relative_weight, color = Parasite_challenge,
fill = Parasite_challenge)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.4,
shape = 21, stroke = 0.5, size = 3) + # Adjusted for outlines
geom_smooth(aes(fill = Parasite_challenge),
method = "loess", se = TRUE, alpha = 0.2) +
#Add smooth line with confidence intervals
scale_color_manual(values = color_mapping,labels = labels) + # Apply custom color mapping
scale_fill_manual(values = color_mapping, , labels = labels) +
# Ensure fills match colors for confidence intervals
labs(#title = "Relative Weight by Days Post Infection",
x = "Days Post Infection (dpi)",
y = "Relative weight, challenge infections",
color = "Infection group",
fill = "Infection group") + # Added for consistency with the legend
theme_minimal() + # Use a minimal theme for a cleaner look
theme(legend.position = "right", # Adjust legend position
plot.title = element_text(hjust = 0.5), # Center the plot title
legend.title.align = 0.5,
legend.text = element_markdown()) -> Rwc
Rwc
ggsave(filename = paste0(d_fi,"/relative_WL_challenge.jpeg"), plot = Rwc,
#width = 6, height = 4,
dpi = 1000)
#relative weight loss per day - primary
#################### combined plot weight loss per day
#relative weight loss per day - primary
Challenge %>%
filter(infection == "primary", Mouse_ID %in% lab$Mouse_ID, death == "primary") %>%
ggplot(aes(x = dpi, y = relative_weight, color = Parasite_primary,
fill = Parasite_primary)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.4,
shape = 21, stroke = 0.5, size = 3) + # Adjusted for outlines
geom_smooth(aes(fill = Parasite_primary),
method = "loess", se = TRUE, alpha = 0.2) +
# Add smooth line with confidence intervals
scale_color_manual(values = color_mapping) + # Apply custom color mapping
scale_fill_manual(values = color_mapping) +
# Ensure fills match colors for confidence intervals
labs(#title = "Relative Weight by Days Post Infection",
x = "Days Post Infection (dpi)",
y = "Relative weight, primary infections",
color = "Infection group",
fill = "Infection group") + # Added for consistency with the legend
theme_minimal() + # Use a minimal theme for a cleaner look
theme(legend.position = "none", # Adjust legend position
plot.title = element_text(hjust = 0.5), # Center the plot title
legend.title.align = 0.5) -> Rwp
Rwp
ggsave(filename = paste0(d_fi,"/relative_WL_primary.jpeg"), plot = Rwp,
width = 6, height = 4, dpi = 1000)
# Adjusted ggplot2 code for OoC variable
Challenge %>%
filter(infection == "challenge") %>%
ggplot(aes(x = dpi, y = OO4sq, color = Parasite_challenge,
fill = Parasite_challenge)) + # Adjust y-axis to OoC
geom_jitter(width = 0.2, height = 0, alpha = 0.6,
shape = 21, stroke = 0.5, size = 3) + # Adjusted for outlines
geom_smooth(aes(fill = Parasite_challenge),
method = "loess", se = TRUE, alpha = 0.2) +
# Add smooth line with confidence intervals
scale_color_manual(values = color_mapping, labels = labels) + # Apply custom color mapping
scale_fill_manual(values = color_mapping, labels = labels) +
# Ensure fills match colors for confidence intervals
labs(#title = "Oocysts per Gram by Days Post Infection",
x = "Days Post Infection (dpi)",
y = "Oocysts per Gram, challenge infections",
color = "Infection group",
fill = "Infection group") + # Adjusted labels for clarity
theme_minimal() + # Use a minimal theme for a cleaner look
theme(legend.position = "right", # Adjust legend position
plot.title = element_text(hjust = 0.5), # Center the plot title
legend.title.align = 0.5,
legend.text = element_markdown()) -> ooc_challenge
ooc_challenge
ggsave(filename = paste0(d_fi,"/oocysts_challenge.jpeg"), plot = ooc_challenge,
width = 6, height = 4, dpi = 1000)
# Adjusted ggplot2 code for OoC variable
Challenge %>%
filter(infection == "primary", !dpi == "0") %>%
ggplot(aes(x = dpi, y = OO4sq, color = Parasite_primary,
fill = Parasite_primary)) + # Adjust y-axis to OoC
geom_jitter(width = 0.2, height = 0, alpha = 0.6,
shape = 21, stroke = 0.5, size = 3) + # Adjusted for outlines
geom_smooth(aes(fill = Parasite_primary),
method = "loess", se = TRUE, alpha = 0.2) +
# Add smooth line with confidence intervals
scale_color_manual(values = color_mapping, labels = labels) + # Apply custom color mapping
scale_fill_manual(values = color_mapping, labels = labels) +
# Ensure fills match colors for confidence intervals
labs(#title = "Oocysts per Gram by Days Post Infection",
x = "Days Post Infection (dpi)",
y = "Oocysts per Gram, primary infections",
color = "Infection group",
fill = "Infection group") + # Adjusted labels for clarity
theme_minimal() +
# Use a minimal theme for a cleaner look
theme(legend.position = "right", # Adjust legend position
plot.title = element_text(hjust = 0.5), # Center the plot title
legend.title.align = 0.5,
legend.text = element_markdown()) -> ooc_primary
ooc_primary
ggsave(filename = paste0(d_fi,"/oocysts_primary.jpeg"), plot = ooc_primary,
#width = 5, height = 4,
dpi = 1000)
ooc_primary + ooc_challenge + Rwp + Rwc +
m_s + strains_weight +
eimeria_weight_prim + eimeria_weight_chal + plot_layout(ncol = 2)
# Combine the plots
#(ooc_primary | ooc_challenge) / # oocysts
panel_figure <-
(Rwp | Rwc) /
(strains_weight_challenge ) /
(eimeria_weight) +
#   plot_layout(guides = 'collect') + # Collect all legends into a single legend
plot_annotation(tag_levels = 'A') # Add labels (A, B, C, etc.)
# Add a figure title
panel_figure <- panel_figure +
plot_annotation(title = 'Fig. 1',
theme = theme(plot.title = element_text(size = 20,
hjust = 0)))
# Display the panel figure
print(panel_figure)
# Save the panel figure
ggsave(paste0(panels_fi, "/experimental_design_simple.jpeg"),
panel_figure, width = 10, height = 12, dpi = 300)
# Combine the plots
panel_hybr <-
(h_w | map_hybrids) +
plot_layout(guides = 'collect') + # Collect all legends into a single legend
plot_annotation(tag_levels = 'A') # Add labels (A, B, C, etc.)
# Add a figure title
panel_hybr <- panel_hybr +
plot_annotation(title = 'Fig. 7',
theme = theme(plot.title =
element_text(size = 13, hjust = 0)))
# Display the panel figure
print(panel_hybr)
# Save the panel figure
ggsave(paste0(panels_fi, "/hyb_plot_design.jpeg"),
panel_hybr, width = 6, height = 3, dpi = 300)
#########################################################################
Challenge <- Challenge %>%
group_by(Mouse_ID, infection) %>%
mutate(weight_loss = 100 - min(relative_weight))
## statistics primary infection
Challenge %>%
filter(infection == "primary") %>%
group_by(Parasite_primary) %>%
summarise(
MeanWeightLoss = mean(weight_loss),
MinWeightLoss = min(weight_loss),
MaxWeightLoss = max(weight_loss),
N = n()
)
## statistics challenge infection
Challenge %>%
filter(infection == "challenge") %>%
group_by(Parasite_challenge) %>%
summarise(
MeanWeightLoss = mean(weight_loss),
MinWeightLoss = min(weight_loss),
MaxWeightLoss = max(weight_loss),
N = n()
)
## statistics primary infection - getting the N
lab %>%
filter(infection == "primary") %>%
group_by(Parasite_primary) %>%
summarise(
MeanWeightLoss = mean(WL_max),
MinWeightLoss = min(WL_max),
MaxWeightLoss = max(WL_max),
N = n()
)
# - getting the N
lab %>%
filter(infection == "challenge")%>%
group_by(Parasite_challenge) %>%
summarise(
MeanWeightLoss = mean(WL_max),
MinWeightLoss = min(WL_max),
MaxWeightLoss = max(WL_max),
N = n()
)
# mean dpi at peak weight loss falciformis
s <-
Challenge %>%
group_by(Mouse_ID, infection) %>%
filter(infection == "primary", Parasite_primary == "E_falciformis",
relative_weight == min(relative_weight))
mean(s$dpi)
# mean dpi at peak weight loss falciformis - challenge
s <-
Challenge %>%
group_by(Mouse_ID, infection) %>%
filter(infection == "challenge", Parasite_challenge == "E_falciformis",
relative_weight == min(relative_weight))
mean(s$dpi)
# mean dpi at peak weight loss primary ferrisi
s <-
Challenge %>%
group_by(Mouse_ID, infection) %>%
filter(infection == "primary", Parasite_primary == "E_ferrisi",
relative_weight == min(relative_weight))
mean(s$dpi)
# mean dpi at peak weight loss E_ferrisi - challenge
s <-
Challenge %>%
group_by(Mouse_ID, infection) %>%
filter(infection == "challenge", Parasite_challenge == "E_ferrisi",
relative_weight == min(relative_weight))
mean(s$dpi)
model <- lm(WL_max ~ mouse_strain, data = lab)
summary(model)
# create a new combined variable
Challenge_p <- Challenge %>%
filter(infection == "primary") %>%
mutate(Parasite = Parasite_primary)
Challenge_c <- Challenge %>%
filter(infection == "challenge") %>%
mutate(Parasite = Parasite_challenge)
Challenge <- rbind(Challenge_p, Challenge_c)
rm(Challenge_c, Challenge_p)
model2 <- lm(weight_loss ~ infection * Parasite, data = Challenge)
summary(model2)
rm(chale, challenge, Eim_strains, eimeria_weight_chal, eimeria_weight_challenge,
eimeria_weight_prim, h_w, m_s, map_hybrids, model, model2, mouse_WL,
ooc_challenge, ooc_primary, panel_figure, panel_hybr, parasite_WL, primary,
Rwc, Rwp, s, strains_weight, strains_weight_challenge, world_map)
lab <- hm %>%
filter(origin == "Lab")
# select the laboratory genes
genes <- lab[ ,colnames(lab) %in% Genes_v]
# PCA
##pca on the complete data set
res.pca <- PCA(genes)
## How much does each dimension contribute to variance?
jpeg(paste0(an_fi, "/scree_plot_pca.jpeg"),
width = 8, height = 6, units = "in", res = 300)
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 70), barfill = "seagreen2")
dev.off()
jpeg(paste0(an_fi, "/contributions_dimensions.jpeg"),
width = 10, height = 5, units = "in", res = 300)
fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#DB6212", "#CC8733", "#5f25e6", "#073DA8"),
repel = TRUE, title = "")
fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#DB6212", "#CC8733", "#5f25e6", "#073DA8"),
repel = TRUE, title = "")
dev.off()
## Description of the dimensions
## We get a correlation between each variable and the first dimension
dimdesc(res.pca)
# Convert mouse_id to a data frame
mouse <- data.frame(Mouse_ID = lab[,1])
# Add the new column pc1 to the mouse_id data frame
mouse$PC1 <- res.pca$ind$coord[, 1]
mouse$PC2 <- res.pca$ind$coord[, 2]  # indexing the second column
mouse$PC3 <-  res.pca$ind$coord[, 3]
mouse$PC4 <-  res.pca$ind$coord[, 4]
mouse$PC5 <-  res.pca$ind$coord[, 5]
lab <- lab %>%
left_join(mouse, by = "Mouse_ID")
## We also need to extract the data for the variable contributions to each of
## the pc axes.
pca.vars <- res.pca$var$coord %>% data.frame
pca.vars$vars <- rownames(pca.vars)
pca.vars.m <- melt(pca.vars, id.vars = "vars")
source(paste0(c, "/functions.R"))
circ <- circleFun(c(0,0),2,npoints = 500)
#It’s possible to use the function corrplot() [corrplot package] to highlight
#the most contributing variables for each dimension:
var.contrib <- as.data.frame(res.pca$var$contrib)
var.contrib.matrix <- data.matrix(var.contrib)
corrplot(var.contrib.matrix, is.corr=FALSE)
pca_var <- as.data.frame(pca.vars)
# Contributions of variables to PC1
jpeg(paste0(an_fi, "/contributions_pc1.jpeg"),
width = 6, height = 4, units = "in", res = 300)
fviz_contrib(res.pca, choice = "var", axes = 1, top = 18,
title = "Contribution of immune genes to the first dimension of the PCA",
fill =  "seagreen2")
dev.off()
fviz_contrib(res.pca, choice = "var", axes = 1, top = 18,
title = "Contribution of immune genes to the first dimension of the PCA",
fill =  "seagreen2") -> contributions_pc1
## Contributions of variables to PC2
jpeg(paste0(an_fi, "/contributions_pc2.jpeg"),
width = 6, height = 4, units = "in", res = 300)
fviz_contrib(res.pca, choice = "var", axes = 2, top = 18,
title = "Contribution of immune genes to the second dimension of the PCA",
fill =  "seagreen2")
dev.off()
fviz_contrib(res.pca, choice = "var", axes = 2, top = 18,
title = "Contribution of immune genes to the second dimension of the PCA",
fill =  "seagreen2") -> contributions_pc2
fviz_contrib(res.pca, choice = "var", axes = 1:2, top = 18)
# Total contribution on PC1 and PC2
fviz_contrib(res.pca, choice = "ind", axes = 1:2)
#select same rows in the first table
lab <- lab[row.names(genes), ]
##############################
#########
###########################
vpg <- pca.vars
# Change the first column of the variance contribution of variables to the gene
# names
vpg <- vpg %>%
dplyr::rename(Variable = vars, PC1 = Dim.1, PC2 = Dim.2)
lab$cos2 <- lab$PC1^2 + lab$PC2^2
# PCA graph of individuals
pca_individuals <-
ggplot(lab, aes(x = PC1, y = PC2, color = current_infection)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
geom_point(size = 5, alpha = 0.5, color = "black",
shape = 21, aes(fill = current_infection))   +
scale_fill_manual(values = color_mapping, labels = labels) +
labs(x = "PC1 (34.37%)", y = "PC2 (16.03%)",# title = "PCA graph of individuals",
fill = "Treatment group") +
theme_minimal() +
theme(#plot.title = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.position = "right",
legend.text = element_markdown())
pca_individuals
pca_individuals
ggsave(filename = paste0(an_fi, "/pca_individuals.jpeg"),
plot = pca_individuals,
width = 6, height = 4, dpi = 300)
###########################
####### PCA graph of variables
# Add cos2 variable to the dataframe
vpg$cos2 <- with(vpg, PC1^2 + PC2^2)
# Define custom gradient colors
gradient_colors <- c("#B00B69", "#A55EA7", "#1D1CC9")
# Define the breaks and labels for the color legend
breaks <- c(0, 50, 100, 150)
labels_2 <- c("0", "50", "100", "150")
# Plotting the factor map
pca_variables <-
ggplot(vpg, aes(x = PC1, y = PC2, color = cos2)) +
geom_segment(aes(xend = 0, yend = 0), color = "gray50") +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +
geom_point(size = 3) +
geom_label_repel(aes(label = Variable), size = 3, box.padding = 0.5, max.overlaps = Inf) +
coord_equal() +
xlab("PC1 (34.37%)") +
ylab("PC2 (16.03%") +
#ggtitle("PCA Plot of Variables") +
theme_minimal()  +
scale_color_gradient(low = "blue", high = "orange")+
labs(color = "Squared distance to origin")
pca_variables
pca_variables
pca_variables
ggsave(filename = paste0(an_fi, "/pca_variables.jpeg"),
plot = pca_variables,
width = 5, height = 6, dpi = 300)
###############################################
##################
############### biplot
biplot <- fviz_pca_biplot(res.pca,
col.ind = lab$current_infection,
pointsize = 2,
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Infection groups",
title = "") +
scale_color_manual(values = color_mapping, labels = labels) +
scale_fill_manual(values = color_mapping, labels = labels) +
scale_shape_manual(values = c(15, 16, 17), labels = labels) +
labs(color = "Infection groups", shape = "Infection groups") +
theme(legend.text = element_markdown())
biplot
biplot
###############################################
##################
############### biplot
biplot <- fviz_pca_biplot(res.pca,
col.ind = lab$current_infection,
pointsize = 2,
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Infection groups",
title = "") +
scale_color_manual(values = color_mapping, labels = labels) +
scale_fill_manual(values = color_mapping, labels = labels) +
scale_shape_manual(values = c(15, 16, 17), labels = labels) +
labs(color = "Infection groups", shape = "Infection groups") +
theme(legend.text = element_markdown())
biplot
dev.off()
dev.off()
biplot
biplot
biplot
ggsave(filename = paste0(an_fi, "/biplot.jpeg"), plot = biplot,
width = 12, height = 6, dpi = 600)
