}}
)
par(mfrow=c(2,2))
denscomp(listDistr, legendtext=distribs2)
cdfcomp(listDistr, legendtext=distribs2)
qqcomp(listDistr, legendtext=distribs2)
ppcomp(listDistr, legendtext=distribs2)
par(mfrow=c(1,1))
}
tryDistrib(x, "normal") #-208.0489
tryDistrib(x, "binomial")
tryDistrib(x, "student")
tryDistrib(x, "weibull")
tryDistrib(x, "weibullshifted")
tryDistrib(x, "normal") #-208.0489
tryDistrib(x, "binomial")
tryDistrib(x, "student")
tryDistrib(x, "weibull")
tryDistrib(x, "weibullshifted")
Field_tol$Sex <- as.factor(Field_tol$Sex)
##All
fitWL_tol <- parasiteLoad::analyse(data = Field_tol,
response = "tolerance",
model = "normal",
group = "Sex")
plot_tolerance_Sex <-
bananaPlot(mod = fitWL_tol$H3,
data = Field_tol,
response = "tolerance",
group = "Sex") +
scale_fill_manual(values = c("blueviolet", "limegreen")) +
scale_color_manual(values = c("blueviolet", "limegreen")) +
theme_bw()
plot_tolerance_Sex
# Create HI bar
HIgradientBar <- ggplot(data.frame(hi = seq(0,1,0.0001)),
aes(x=hi, y=1, fill = hi)) +
geom_tile() +
theme_void() +
scale_fill_gradient(low = "blue", high = "red")  +
scale_x_continuous(expand=c(.01,0)) +
scale_y_continuous(expand=c(0,0)) +
theme(legend.position = 'none')
################## hybrid effect
Field <- Field %>%
mutate(HE = 2*HI*(1-HI), #linearize HI
tolerance = predicted_WL / delta_ct_cewe_MminusE)
i <- Field %>%
filter(Sex == "M") %>%
drop_na(tolerance)
cor(i$HI, i$tolerance, method = "spearman")
cor(i$HI, i$predicted_WL, method = "spearman")
######
Field_tol <- Field %>%
mutate(tolerance = predicted_WL / delta_ct_cewe_MminusE)
Field_tol <- Field_tol %>%
filter(!is.na(tolerance), MC.Eimeria == TRUE)
summary(Field_tol$tolerance)
Field_tol <- Field_tol %>%
filter(tolerance > -5, tolerance < 30)
summary(Field_tol$tolerance)
hist(Field_tol$tolerance)
Field_tol %>%
ggplot(aes(tolerance)) +
geom_histogram()
parasiteLoad::getParamBounds("normal", data = Field_tol, response = "tolerance")
x <- Field_tol$tolerance
# Define function to be used to test, get the log lik and aic
tryDistrib <- function(x, distrib){
# deals with fitdistr error:
fit <-
tryCatch(MASS::fitdistr(x, distrib), error=function(err) "fit failed")
return(list(fit = fit,
loglik = tryCatch(fit$loglik, error=function(err) "no loglik computed"),
AIC = tryCatch(fit$aic, error=function(err) "no aic computed")))
}
findGoodDist <- function(x, distribs, distribs2){
l =lapply(distribs, function(i) tryDistrib(x, i))
names(l) <- distribs
print(l)
listDistr <- lapply(distribs2, function(i){
if (i %in% "t"){
fitdistrplus::fitdist(x, i, start = list(df =2))
} else {
fitdistrplus::fitdist(x,i)
}}
)
par(mfrow=c(2,2))
denscomp(listDistr, legendtext=distribs2)
cdfcomp(listDistr, legendtext=distribs2)
qqcomp(listDistr, legendtext=distribs2)
ppcomp(listDistr, legendtext=distribs2)
par(mfrow=c(1,1))
}
tryDistrib(x, "normal") #-208.0489
tryDistrib(x, "binomial")
tryDistrib(x, "student")
tryDistrib(x, "weibull")
tryDistrib(x, "weibullshifted")
x <- Field_tol$tolerance
tryDistrib(x, "normal") #-208.0489
tryDistrib(x, "binomial")
tryDistrib(x, "student")
tryDistrib(x, "weibull")
tryDistrib(x, "weibullshifted")
Field_tol$Sex <- as.factor(Field_tol$Sex)
##All
fitWL_tol <- parasiteLoad::analyse(data = Field_tol,
response = "tolerance",
model = "normal",
group = "Sex")
# 7.6: Could we derive tolerance out of the predicted health impact and
# infection intenstities for each mouse?
# If so, can we test the hybridicity on this derives tolerance variable?
Field_tol <- Field %>%
mutate(tolerance = predicted_WL / delta_ct_cewe_MminusE)
Field_tol <- Field_tol %>%
filter(!is.na(tolerance), MC.Eimeria == TRUE)
summary(Field_tol$tolerance)
Field_tol <- Field_tol %>%
filter(tolerance > -5, tolerance < 30)
summary(Field_tol$tolerance)
hist(Field_tol$tolerance)
Field_tol %>%
ggplot(aes(tolerance)) +
geom_histogram()
parasiteLoad::getParamBounds("normal", data = Field_tol, response = "tolerance")
x <- Field_tol$tolerance
tryDistrib(x, "normal") #-208.0489
tryDistrib(x, "binomial")
tryDistrib(x, "student")
tryDistrib(x, "weibull")
tryDistrib(x, "weibullshifted")
Field_tol$Sex <- as.factor(Field_tol$Sex)
##All
fitWL_tol <- parasiteLoad::analyse(data = Field_tol,
response = "tolerance",
model = "normal",
group = "Sex")
plot_tolerance_Sex <-
bananaPlot(mod = fitWL_tol$H3,
data = Field_tol,
response = "tolerance",
group = "Sex") +
scale_fill_manual(values = c("blueviolet", "limegreen")) +
scale_color_manual(values = c("blueviolet", "limegreen")) +
theme_bw()
plot_tolerance_Sex
# Create HI bar
HIgradientBar <- ggplot(data.frame(hi = seq(0,1,0.0001)),
aes(x=hi, y=1, fill = hi)) +
geom_tile() +
theme_void() +
scale_fill_gradient(low = "blue", high = "red")  +
scale_x_continuous(expand=c(.01,0)) +
scale_y_continuous(expand=c(0,0)) +
theme(legend.position = 'none')
################## hybrid effect
Field <- Field %>%
mutate(HE = 2*HI*(1-HI), #linearize HI
tolerance = predicted_WL / delta_ct_cewe_MminusE)
################## hybrid effect
Field <- Field %>%
mutate(HE = 2*HI*(1-HI)) #linearize HI)
i <- Field %>%
filter(Sex == "M") %>%
drop_na(tolerance)
cor(i$HI, i$tolerance, method = "spearman")
cor(i$HI, i$predicted_WL, method = "spearman")
i <- Field %>%
filter(Sex == "F") %>%
drop_na(tolerance)
cor(i$HI, i$tolerance, method = "spearman")
cor(i$HI, i$predicted_WL, method = "spearman")
ggplot(Field, aes(x = HI, HE)) +
geom_point() +
geom_line()
ggplot(Field, aes(x = HE, predicted_WL, color = Sex)) +
geom_smooth(method = lm, se = TRUE)
model <- lm(predicted_WL ~ Sex, data = Field)
summary(model)
model <- lm(predicted_WL ~ Sex*HI, data = Field)
summary(model)
################## hybrid effect
Field <- Field %>%
mutate(HE = 2*HI*(1-HI)) #linearize HI)
i <- Field %>%
filter(Sex == "M") %>%
drop_na(tolerance)
cor(i$HI, i$tolerance, method = "spearman")
cor.test(i$HI, i$tolerance, method = "spearman")
cor.test(i$HI, i$predicted_WL, method = "spearman")
cor.test(i$HI, i$tolerance)
cor.test(i$HI, i$predicted_WL)
i <- Field %>%
filter(Sex == "F") %>%
drop_na(tolerance)
cor.test(i$HI, i$tolerance)
cor.test(i$HI, i$predicted_WL)
cor.test(i$HI, i$tolerance)
cor.test(i$HI, i$predicted_WL)
ggplot(Field, aes(x = HI, HE)) +
geom_point() +
geom_line()
ggplot(Field, aes(x = HE, predicted_WL, color = Sex)) +
geom_smooth(method = lm, se = TRUE)
ggplot(Field, aes(x = HE, tolerance, color = Sex)) +
geom_jitter() +
geom_smooth(method = lm, se = TRUE)
ggplot(Field, aes(x = HE, OPG)) +
geom_point() +
geom_line()
model <- lm(formula = predicted_WL ~  HE * Sex, data = Field)
summary(model)
df <- Field %>%
filter(MC.Eimeria == TRUE)
cor.test(Field$HI, Field$predicted_WL)
df <- Field %>%
filter(MC.Eimeria == TRUE)
###########################################################
#########################################################
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
model <- lm(tolerance ~ HI + HE * Sex, df)
summary(model)
######################################################################
Field_asp <- Field %>%
drop_na(Aspiculuris_sp) %>%
filter(Aspiculuris_sp != 0) %>%
mutate(tolerance = predicted_WL / Aspiculuris_sp) %>%
drop_na(tolerance)
model <- lm(tolerance ~ Aspiculuris_sp, data = Field_asp)
summary(model)
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
model <- lm(tolerance ~ HI + HE * Sex, df)
summary(model)
####################################################################
Field_asp <- Field %>%
drop_na(Aspiculuris_sp) %>%
filter(Aspiculuris_sp != 0) %>%
mutate(tolerance = predicted_WL / Aspiculuris_sp) %>%
drop_na(tolerance)
model <- lm(tolerance ~ Aspiculuris_sp, data = Field_asp)
summary(model)
#########################################################################
df <- Field %>%
filter(eimeriaSpecies == "E_falciformis")
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
#################################
df <- Field %>%
filter(eimeriaSpecies == "E_ferrisi")
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
#################
df <- Field %>%
filter(eimeriaSpecies == "E_falciformis")
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
#################################
df <- Field %>%
drop_na(ILWE_Crypto_Ct) %>%
filter(ILWE_Crypto_Ct != 0) %>%
mutate(tolerance = predicted_WL / -ILWE_Crypto_Ct) %>%
drop_na(tolerance)
model_tolerance <- lm(predicted_WL ~ ILWE_Crypto_Ct,
data = df)
summary(model_tolerance)
###################################
df <- Field %>%
drop_na(Syphacia_sp) %>%
filter(Syphacia_sp != 0) %>%
mutate(tolerance = predicted_WL / Syphacia_sp) %>%
drop_na(tolerance)
model_tolerance <- lm(predicted_WL ~ Syphacia_sp,
data = df)
summary(model_tolerance)
#####################################
###################################
df <- Field %>%
drop_na(Heterakis_sp) %>%
filter(Heterakis_sp != 0) %>%
mutate(tolerance = predicted_WL / Heterakis_sp) %>%
drop_na(tolerance)
model_tolerance <- lm(predicted_WL ~ Heterakis_sp,
data = df)
summary(model_tolerance)
################################
df <- Field %>%
drop_na(Trichuris_muris) %>%
filter(Trichuris_muris != 0) %>%
mutate(tolerance = predicted_WL / Trichuris_muris) %>%
drop_na(tolerance)
model_tolerance <- lm(predicted_WL ~ Trichuris_muris,
data = df)
summary(model_tolerance)
##################################################################
##
Field <- Field %>%
mutate(infection_intensity_Eim = delta_ct_cewe_MminusE)
Field_par <- Field %>%
mutate(
infected_Aspiculuris = Aspiculuris_sp != 0,
infected_syphasia = Syphacia_sp != 0,
infected_crypto = ILWE_Crypto_Ct != 0
)
Field_par <- Field_par %>%
mutate(
infected_Aspiculuris = as.factor(infected_Aspiculuris),
infected_syphasia = as.factor(infected_syphasia),
infected_crypto = as.factor(infected_crypto)
)
modelA <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE
+ infected_syphasia + infected_crypto, data = Field_par)
summary(modelA)
plot_summs(modelA, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "mediumblue") -> plot1
plot1
#######################################
modelB <- lm(predicted_WL ~ MC.Eimeria * HE, Field)
summary(modelB)
plot_summs(modelB, plot.distributions = TRUE)
## hybrid index + infectopm
Field$MC.Eimeria <- as.factor(Field$MC.Eimeria)
modelC <- lm(predicted_WL ~ MC.Eimeria *infection_intensity_Eim * HE +
HI + HE, Field)
summary(modelC)
plot_summs(modelC, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "mediumblue") -> plot2
plot2
ggsave(filename = "figures/coefficient_plot_model2.jpeg", plot = plot2,
width = 5, height = 4, dpi = 300)
ggpredict(modelC, terms = c("MC.Eimeria", "infection_intensity_Eim")) %>%
plot()
## hybrid index + infectopm
modelD <- lm(predicted_WL ~  HI + HE, Field)
summary(modelD)
plot_summs(modelD,  plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "mediumblue")  -> plot_4
ggsave(filename = "figures/coefficient_plot_HE.jpeg", plot = plot_4,
width = 5, height = 4, dpi = 300)
plot_summs(modelC, modelD,  robust = TRUE,
scale = TRUE) -> model1_2
model1_2
##  Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
stargazer(modelA, modelB, modelC, modelD,
type = "text",
out = "tables/",
title = "Linear models - Contributions to predicted maximum weight loss",
align = TRUE)stargazer_field_modelaA_D.doc
ggsave(filename = "figures/coefficient_plot_model1_2.jpeg", plot = model1_2,
width = 8, height = 6, dpi = 300)
model4 <- lm(predicted_WL ~  MC.Eimeria, Field)
summary(model4)
export_summs(modelA, modelB, modelC, modelD, scale = TRUE, to.file = "docx",
file.name = "tables/field_modelaA_D.docx")
plot_coefs(modelA, modelB, modelC, modelD, plot.distributions = TRUE)
##################################
#raincloud plots
ggplot(Field, aes(x = MC.Eimeria, y = predicted_WL, color = MC.Eimeria)) +
geom_violin(trim = FALSE, alpha = 0.5) +
geom_quasirandom(aes(color = MC.Eimeria), size = 1, alpha = 0.8) +
geom_boxplot(width = 0.1, outlier.shape = NA, alpha = 0.5) +
scale_color_brewer(palette = "Dark2") +
theme_minimal() +
labs(title = "Raincloud Plot of predicted_WL by MC.Eimeria Group",
x = "MC.Eimeria Group",
y = "Predicted WL")
# Filter out NA values in MC.Eimeria
Field_filtered <- Field %>% filter(!is.na(MC.Eimeria))
model <- lm(predicted_WL ~ MC.Eimeria, Field)
summary(model)
source("~/GitHub/Hybrid_health_outcomes/code/master_hm.R")
## hybrid index + infectopm
Field$MC.Eimeria <- factor(Field$MC.Eimeria, levels = c("FALSE", "TRUE"))
################## Linearizing the HI
Field <- Field %>%
mutate(HE = 2*HI*(1-HI), #linearize HI
tolerance = predicted_WL / delta_ct_cewe_MminusE)
################## Linearizing the HI
# calculating the expected heterozygocity
Field <- Field %>%
mutate(HE = 2*HI*(1-HI), #linearize HI
tolerance = predicted_WL / delta_ct_cewe_MminusE)
################## Linearizing the HI
# calculating the expected heterozygocity
Field <- Field %>%
mutate(HE = 2*HI*(1-HI), #linearize HI
tolerance = predicted_WL / delta_ct_cewe_MminusE)
model1 <- lm(predicted_WL ~ MC.Eimeria *infection_intensity_Eim * HE +
HI + HE, Field)
summary(model1)
Field$delta_ct_cewe_MminusE
model1 <- lm(predicted_WL ~ MC.Eimeria *delta_ct_cewe_MminusE * HE +
HI + HE, Field)
summary(model1)
plot_summs(model1, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "mediumblue") -> plot1
plot1
ggsave(filename = "figures/coefficient_plot_model1.jpeg", plot = plot1,
width = 5, height = 4, dpi = 300)
ggsave(filename = paste0(an_fi, "/coefficient_plot_model1.jpeg"), plot = plot1,
width = 5, height = 4, dpi = 300)
## hybrid index + infectopm
model2 <- lm(predicted_WL ~  HI + HE, Field)
summary(model2)
plot_summs(model2,  plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "mediumblue")  -> plot_2
plot_2
ggsave(filename = paste0(an_fi, "/coefficient_plot_HE.jpeg"), plot = plot_4,
width = 5, height = 4, dpi = 300)
ggsave(filename = paste0(an_fi, "/coefficient_plot_HE.jpeg"), plot = plot_2,
width = 5, height = 4, dpi = 300)
model3 <- lm(predicted_WL ~  MC.Eimeria, Field)
summary(model3)
plot_summs(model1, model2, model3, robust = TRUE,
scale = TRUE) -> model1_2
model1_2
ggsave(filename = paste0(an_fi, "figures/coefficient_plot_model1_2_3.jpeg"), plot = model1_2,
width = 8, height = 6, dpi = 300)
# Define colors
colors <- c("TRUE" = "forestgreen", "FALSE" = "purple")
Field %>%
drop_na(MC.Eimeria)%>%
ggplot(aes(y = MC.Eimeria, x = predicted_WL, fill = MC.Eimeria)) +
ggdist::stat_halfeye(
adjust = .5,
width = .6,
alpha = 0.5,
.width = 0,
justification = -.2,
point_colour = NA,
orientation = "y"  # Set orientation to y
) +
scale_fill_manual(values = colors) +
geom_boxplot(
width = .15,
outlier.shape = NA,
orientation = "y"  # Set orientation to y
) +
stat_dots(
# ploting on left side
side = "left",
# adjusting position
justification = 1.1,
# adjust grouping (binning) of observations
binwidth = 0.25,
alpha = 0.5) +
geom_point(
shape = 95,
size = 15,
alpha = .2,
color = "gray50",
position = position_dodge(width = 0.75)
) +
coord_cartesian(ylim = c(1.2, 2.9), clip = "off") +
theme_minimal() +
labs(y = "Infection status with Eimerai spp.",
x = "Predicted weight loss" ,
fill = "Infection status with Eimeria spp.") -> raincloud_plots__eimeria
# Use p_load to install (if not already) and load the packages
pacman::p_load(mice, stringr, gridExtra, dplyr, tidyverse, tidyr, janitor,
visdat, corrplot, RColorBrewer, ggplot2, VIM, limma,
latticeExtra, patchwork,FactoMineR, ggrepel, factoextra,
reshape2, sjPlot, stargazer, jtools,modelsummary, ggeffects,
pheatmap, ggpubr, ggridges, gt, caret, randomForest, rfUtilities,
parasiteLoad, fitdistrplus, optimx, leaflet, magick, ggdist)
Field %>%
drop_na(MC.Eimeria)%>%
ggplot(aes(y = MC.Eimeria, x = predicted_WL, fill = MC.Eimeria)) +
ggdist::stat_halfeye(
adjust = .5,
width = .6,
alpha = 0.5,
.width = 0,
justification = -.2,
point_colour = NA,
orientation = "y"  # Set orientation to y
) +
scale_fill_manual(values = colors) +
geom_boxplot(
width = .15,
outlier.shape = NA,
orientation = "y"  # Set orientation to y
) +
stat_dots(
# ploting on left side
side = "left",
# adjusting position
justification = 1.1,
# adjust grouping (binning) of observations
binwidth = 0.25,
alpha = 0.5) +
geom_point(
shape = 95,
size = 15,
alpha = .2,
color = "gray50",
position = position_dodge(width = 0.75)
) +
coord_cartesian(ylim = c(1.2, 2.9), clip = "off") +
theme_minimal() +
labs(y = "Infection status with Eimerai spp.",
x = "Predicted weight loss" ,
fill = "Infection status with Eimeria spp.") -> raincloud_plots__eimeria
raincloud_plots__eimeria
